openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API для управления пользователями

tags:
  - name: Users
    description: API для управления пользователями

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: Уникальный идентификатор пользователя
        telegramId:
          type: string
          description: Уникальный Telegram ID пользователя
        firstName:
          type: string
          description: Имя пользователя
        lastName:
          type: string
          description: Фамилия пользователя
        username:
          type: string
          description: Логин (username) пользователя
        photoUrl:
          type: string
          description: URL фотографии пользователя
        coins:
          type: number
          description: Количество монет у пользователя
          default: 0
        role:
          type: string
          enum:
            - user
            - admin
            - moderator
          description: Роль пользователя
          default: user
        createdAt:
          type: string
          format: date-time
          description: Дата создания пользователя
        updatedAt:
          type: string
          format: date-time
          description: Дата обновления пользователя

paths:
  /api/users:
    post:
      summary: Создать нового пользователя
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Ошибка валидации запроса

    get:
      summary: Получить список всех пользователей
      tags:
        - Users
      responses:
        "200":
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Ошибка сервера

  /api/users/{id}:
    get:
      summary: Получить пользователя по идентификатору
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя
      responses:
        "200":
          description: Информация о пользователе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Пользователь не найден
        "500":
          description: Ошибка сервера

    put:
      summary: Обновить данные пользователя
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Пользователь успешно обновлён
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Ошибка валидации запроса
        "404":
          description: Пользователь не найден

    delete:
      summary: Удалить пользователя
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя
      responses:
        "200":
          description: Пользователь успешно удалён
        "404":
          description: Пользователь не найден
        "500":
          description: Ошибка сервера
