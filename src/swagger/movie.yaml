openapi: 3.0.0
info:
  title: Movie API
  version: 1.0.0
  description: API для управления фильмами

tags:
  - name: Movies
    description: API для работы с фильмами

components:
  schemas:
    User:
      type: object
      description: Пользователь (автор фильма)
      properties:
        _id:
          type: string
          description: Уникальный идентификатор пользователя
        username:
          type: string
          description: Логин пользователя
        firstName:
          type: string
          description: Имя пользователя
        lastName:
          type: string
          description: Фамилия пользователя
        photoUrl:
          type: string
          description: URL фотографии пользователя
    Movie:
      type: object
      description: Фильм
      required:
        - title
      properties:
        _id:
          type: string
          description: Уникальный идентификатор фильма
        title:
          type: string
          description: Название фильма
        author:
          oneOf:
            - type: string
              description: Идентификатор автора (ObjectId)
            - $ref: "#/components/schemas/User"
          description: Автор фильма
        createdAt:
          type: string
          format: date-time
          description: Дата создания фильма
        isDeleted:
          type: boolean
          description: Флаг удаления фильма
        deletedAt:
          type: string
          format: date-time
          nullable: true
          description: Дата удаления фильма

paths:
  /api/movies:
    post:
      summary: Создать новый фильм
      tags: [Movies]
      description: >
        При создании фильма передаётся объект с полями:
        - **title**: название фильма.
        - **telegramId**: идентификатор пользователя, который создаёт фильм (используется для поиска автора).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Название фильма
                telegramId:
                  type: string
                  description: Telegram ID пользователя, создающего фильм
              required:
                - title
                - telegramId
      responses:
        "201":
          description: Фильм создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "400":
          description: Ошибка валидации

    get:
      summary: Получить список всех фильмов
      tags: [Movies]
      responses:
        "200":
          description: Список фильмов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movie"
        "500":
          description: Ошибка сервера

  /api/movies/{id}:
    get:
      summary: Получить фильм по ID
      tags: [Movies]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Уникальный идентификатор фильма
      responses:
        "200":
          description: Данные фильма
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: Фильм не найден
        "500":
          description: Ошибка сервера

    put:
      summary: Обновить данные фильма
      tags: [Movies]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Уникальный идентификатор фильма
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Новое название фильма
              required:
                - title
      responses:
        "200":
          description: Фильм обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "404":
          description: Фильм не найден
        "400":
          description: Ошибка валидации

    delete:
      summary: Удалить фильм (логически)
      tags: [Movies]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Уникальный идентификатор фильма
      responses:
        "200":
          description: Фильм помечен как удаленный
        "404":
          description: Фильм не найден
        "500":
          description: Ошибка сервера
