{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "API для работы с разными сущностями"
  },
  "paths": {
    "/api/movies": {
      "post": {
        "summary": "Создать новый фильм",
        "tags": [
          "Movies"
        ],
        "description": "При создании фильма передаётся объект с полями: - **title**: название фильма. - **telegramId**: идентификатор пользователя, который создаёт фильм (используется для поиска автора).\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Название фильма"
                  },
                  "telegramId": {
                    "type": "string",
                    "description": "Telegram ID пользователя, создающего фильм"
                  }
                },
                "required": [
                  "title",
                  "telegramId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Фильм создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации"
          }
        }
      },
      "get": {
        "summary": "Получить список всех фильмов",
        "tags": [
          "Movies"
        ],
        "responses": {
          "200": {
            "description": "Список фильмов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/api/movies/{id}": {
      "get": {
        "summary": "Получить фильм по ID",
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Уникальный идентификатор фильма"
          }
        ],
        "responses": {
          "200": {
            "description": "Данные фильма",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "404": {
            "description": "Фильм не найден"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      },
      "put": {
        "summary": "Обновить данные фильма",
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Уникальный идентификатор фильма"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Новое название фильма"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Фильм обновлен",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации"
          },
          "404": {
            "description": "Фильм не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить фильм (логически)",
        "tags": [
          "Movies"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Уникальный идентификатор фильма"
          }
        ],
        "responses": {
          "200": {
            "description": "Фильм помечен как удаленный"
          },
          "404": {
            "description": "Фильм не найден"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/api/affirmations": {
      "post": {
        "summary": "Добавить новую аффирмацию",
        "tags": [
          "Affirmations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Affirmation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Успешное создание"
          },
          "400": {
            "description": "Ошибка валидации"
          }
        }
      },
      "get": {
        "summary": "Получить список всех аффирмаций",
        "tags": [
          "Affirmations"
        ],
        "responses": {
          "200": {
            "description": "Список аффирмаций",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Affirmation"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/api/affirmations/{id}": {
      "delete": {
        "summary": "Удалить аффирмацию",
        "tags": [
          "Affirmations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Идентификатор аффирмации"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление"
          },
          "404": {
            "description": "Аффирмация не найдена"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/api/affirmations/random": {
      "get": {
        "summary": "Получить случайную аффирмацию",
        "tags": [
          "Affirmations"
        ],
        "responses": {
          "200": {
            "description": "Случайная аффирмация",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Affirmation"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/api/final-results": {
      "get": {
        "summary": "Получить все финальные результаты",
        "operationId": "getAllFinalResults",
        "tags": [
          "FinalResults"
        ],
        "responses": {
          "200": {
            "description": "Успешный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinalResults"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Добавить финальный результат",
        "operationId": "addFinalResults",
        "tags": [
          "FinalResults"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalResults"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Финальный результат успешно добавлен"
          },
          "400": {
            "description": "Ошибка в данных запроса"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "summary": "Создать нового пользователя",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Пользователь успешно создан",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации запроса"
          }
        }
      },
      "get": {
        "summary": "Получить список всех пользователей",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Список пользователей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Получить пользователя по идентификатору",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Уникальный идентификатор пользователя"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователе",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      },
      "put": {
        "summary": "Обновить данные пользователя",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Уникальный идентификатор пользователя"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно обновлён",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Ошибка валидации запроса"
          },
          "404": {
            "description": "Пользователь не найден"
          }
        }
      },
      "delete": {
        "summary": "Удалить пользователя",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Уникальный идентификатор пользователя"
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удалён"
          },
          "404": {
            "description": "Пользователь не найден"
          },
          "500": {
            "description": "Ошибка сервера"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Уникальный идентификатор пользователя"
          },
          "telegramId": {
            "type": "string",
            "description": "Уникальный Telegram ID пользователя"
          },
          "firstName": {
            "type": "string",
            "description": "Имя пользователя"
          },
          "lastName": {
            "type": "string",
            "description": "Фамилия пользователя"
          },
          "username": {
            "type": "string",
            "description": "Логин (username) пользователя"
          },
          "photoUrl": {
            "type": "string",
            "description": "URL фотографии пользователя"
          },
          "coins": {
            "type": "number",
            "description": "Количество монет у пользователя",
            "default": 0
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin",
              "moderator"
            ],
            "description": "Роль пользователя",
            "default": "user"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания пользователя"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Дата обновления пользователя"
          }
        }
      },
      "Movie": {
        "type": "object",
        "description": "Фильм",
        "required": [
          "title"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Уникальный идентификатор фильма"
          },
          "title": {
            "type": "string",
            "description": "Название фильма"
          },
          "author": {
            "oneOf": [
              {
                "type": "string",
                "description": "Идентификатор автора (ObjectId)"
              },
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "Автор фильма"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания фильма"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Флаг удаления фильма"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Дата удаления фильма"
          }
        }
      },
      "Affirmation": {
        "type": "object",
        "required": [
          "text"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Уникальный идентификатор аффирмации"
          },
          "text": {
            "type": "string",
            "description": "Текст аффирмации"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания"
          }
        }
      },
      "FinalResults": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный идентификатор результата",
            "example": "60d21b4667d0d8992e610c85"
          },
          "firstPlace": {
            "type": "string",
            "format": "uuid",
            "description": "ID фильма, занявшего первое место",
            "example": "60d21b4667d0d8992e610c85"
          },
          "secondPlace": {
            "type": "string",
            "format": "uuid",
            "description": "ID фильма, занявшего второе место",
            "example": "60d21b4667d0d8992e610c86"
          },
          "thirdPlace": {
            "type": "string",
            "format": "uuid",
            "description": "ID фильма, занявшего третье место",
            "example": "60d21b4667d0d8992e610c87"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания результата",
            "example": "2024-02-02T12:00:00Z"
          }
        }
      }
    }
  }
}